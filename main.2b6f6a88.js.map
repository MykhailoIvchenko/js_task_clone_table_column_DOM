{"version":3,"sources":["scripts/main.js"],"names":["CloneAndPasteTableColumn","table","copiedColumnNumber","copiedCell","newSell","cutSell","columnForCopy","newColumnPosition","newPosition","alert","rows","cells","length","i","cellsArray","innerHTML","tagName","document","createElement","append","indexOfPastingFromTheEnd","j","myTable","querySelector"],"mappings":";AAAA,aAcA,SAASA,EACPC,GAAOC,IACHC,EACAC,EACAC,EACAC,EACAC,EALGL,EAAqB,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EAAGM,EAAc,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EAOzC,IAACP,EAGI,OAFPQ,MAAM,gCAEC,EAKPH,EAFEJ,EAAqB,GACpBA,EAAqBD,EAAMS,KAAK,GAAGC,MAAMC,OAC5B,EAEAV,EAIhBK,EADEC,EAAc,GAAKA,EAAcP,EAAMS,KAAK,GAAGC,MAAMC,OACnCX,EAAMS,KAAK,GAAGC,MAAMC,OAEpBJ,EAGjB,IAAA,IAAIK,EAAI,EAAGA,EAAIZ,EAAMS,KAAKE,OAAQC,IAAK,CACpCC,IAAAA,EAAab,EAAMS,KAAKG,GAAGF,MAEjCR,EAAaW,EAAWR,EAAgB,GAAGS,WAGzCX,EADqC,OAAnCH,EAAMS,KAAKG,GAAGF,MAAM,GAAGK,QACfC,SAASC,cAAc,MAEvBD,SAASC,cAAc,OAG3BH,UAAYZ,EAEpBF,EAAMS,KAAKG,GAAGM,OAAOf,GAKhB,IAHCgB,IAAAA,EACJN,EAAWF,OAASL,EAAoB,EAEjCc,EAAI,EAAGA,EAAID,EAA0BC,IAC5ChB,EAAUS,EAAWP,GACrBN,EAAMS,KAAKG,GAAGM,OAAOd,IAK3B,IAAMiB,EAAUL,SAASM,cAAc,SAEvCvB,EAAyBsB,EAAS,EAAG","file":"main.2b6f6a88.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// There is a function for the common cases above\n// The function allows us to copy any column\n// and paste it to any place in the table\n// You should pass the table, column to copy and column\n// after which the clone should be pasted\n// The numbers of columns start from 1 as usual users count, not from 0\n// If to the newPosition passed 0 it means to paste before the first column\n// If to the newPositison passed negative number or too big number\n// the clone would be pasted to the end of table\n// If to the copiedColumnNumber passed wrong number\n// the function would take the first one\n\nfunction CloneAndPasteTableColumn(\n  table, copiedColumnNumber = 1, newPosition = 1) {\n  let copiedCell;\n  let newSell;\n  let cutSell;\n  let columnForCopy;\n  let newColumnPosition;\n\n  if (!table) {\n    alert('There is no table to change!');\n\n    return 0;\n  }\n\n  if (copiedColumnNumber < 1\n    || copiedColumnNumber > table.rows[0].cells.length) {\n    columnForCopy = 1;\n  } else {\n    columnForCopy = copiedColumnNumber;\n  }\n\n  if (newPosition < 0 || newPosition > table.rows[0].cells.length) {\n    newColumnPosition = table.rows[0].cells.length;\n  } else {\n    newColumnPosition = newPosition;\n  }\n\n  for (let i = 0; i < table.rows.length; i++) {\n    const cellsArray = table.rows[i].cells;\n\n    copiedCell = cellsArray[columnForCopy - 1].innerHTML;\n\n    if (table.rows[i].cells[0].tagName === 'TH') {\n      newSell = document.createElement('th');\n    } else {\n      newSell = document.createElement('td');\n    }\n\n    newSell.innerHTML = copiedCell;\n\n    table.rows[i].append(newSell);\n\n    const indexOfPastingFromTheEnd\n    = cellsArray.length - newColumnPosition - 1;\n\n    for (let j = 0; j < indexOfPastingFromTheEnd; j++) {\n      cutSell = cellsArray[newColumnPosition];\n      table.rows[i].append(cutSell);\n    }\n  };\n}\n\nconst myTable = document.querySelector('table');\n\nCloneAndPasteTableColumn(myTable, 2, 4);\n\n// The solution exactly for our case is below\n\n/* const myTable = document.querySelector('table');\nlet copiedCell;\nlet newSell;\nlet cutSell;\n\nfor (let i = 0; i < myTable.rows.length; i++) {\n  copiedCell = myTable.rows[i].cells[1].innerHTML;\n\n  if (myTable.rows[i].cells[0].tagName === 'TH') {\n    newSell = document.createElement('th');\n  } else {\n    newSell = document.createElement('td');\n  }\n\n  newSell.innerHTML = copiedCell;\n\n  myTable.rows[i].append(newSell);\n\n  cutSell = myTable.rows[i].cells[myTable.rows[i].cells.length - 2];\n  myTable.rows[i].append(cutSell);\n}; */\n"]}